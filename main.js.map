{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/welcome.component.html","webpack:///./src/app/home/welcome.component.ts","webpack:///./src/app/products/product-detail.component.css","webpack:///./src/app/products/product-detail.component.html","webpack:///./src/app/products/product-detail.component.ts","webpack:///./src/app/products/product-detail.guard.ts","webpack:///./src/app/products/product-list.component.css","webpack:///./src/app/products/product-list.component.html","webpack:///./src/app/products/product-list.component.ts","webpack:///./src/app/products/product.module.ts","webpack:///./src/app/products/product.service.ts","webpack:///./src/app/shared/convert-to-spaces.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/star.component.css","webpack:///./src/app/shared/star.component.html","webpack:///./src/app/shared/star.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".nav-link {\\n  font-size: large;\\n}\\n\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'pm-root',\n  template: `\n  <nav class='navbar navbar-expand navbar-light bg-light'>\n    <a class='navbar-brand'>{{pageTitle}}</a>\n    <ul class='nav nav-pills'>\n      <li><a class='nav-link' [routerLink]=\"['/welcome']\">Home</a></li>\n      <li><a class='nav-link'[routerLink]=\"['/products']\">Products</a></li>\n    </ul>\n  </nav>  \n  <div class='container'>\n    <router-outlet></router-outlet>\n  </div>  \n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle: string = 'Product Management';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { ProductModule } from './products/product.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\n    ]),\n    ProductModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    {{pageTitle}}\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"./assets/images/images.jpg\\\"\\n             class=\\\"img-responsive center-block\\\"\\n             style=\\\"max-height:300px;padding-bottom:50px\\\" />\\n      </div>\\n\\n      <div class=\\\"text-center\\\">Developed by:</div>\\n      <div class=\\\"text-center\\\">\\n        <h3>Brittany Ashmore</h3>\\n        <h6>Simple Angular Example Page</h6>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","module.exports = \"\"","module.exports = \"<div class='card' *ngIf='product'>\\n  <div class='card-header'>\\n    {{pageTitle + ': ' + product.productName}}\\n    </div>\\n    <div class='card-body'>\\n        <div class='row'>\\n          <div class='col-md-8'>\\n            <div class='row'>\\n              <div class='col-md-4'>Name:</div>\\n              <div class='col-md-8'>{{product.productName}}</div>\\n            </div>\\n            <div class='row'>\\n              <div class='col-md-4'>Code:</div>\\n              <div class='col-md-8'>{{product.productCode | lowercase | convertToSpaces: '-'}}</div>\\n            </div>\\n            <div class='row'>\\n              <div class='col-md-4'>Description:</div>\\n              <div class='col-md-8'>{{product.description}}</div>\\n            </div>\\n            <div class='row'>\\n              <div class='col-md-4'>Availability:</div>\\n              <div class='col-md-8'>{{product.releaseDate}}</div>\\n            </div>\\n            <div class='row'>\\n              <div class='col-md-4'>Price:</div>\\n              <div class='col-md-8'>{{product.price|currency:'USD':'symbol'}}</div>\\n            </div>\\n            <div class='row'>\\n              <div class='col-md-4'>5 Star Rating:</div>\\n              <div class='col-md-8'>\\n                <pm-star [rating]='product.starRating'>\\n                </pm-star>\\n              </div>\\n            </div>\\n          </div>\\n    \\n          <div class='col-md-4'>\\n            <img class='center-block img-responsive'\\n                 [style.width.px]='200'\\n                 [style.margin.px]='2'\\n                 [src]='product.imageUrl'\\n                 [title]='product.productName'>\\n          </div>\\n        </div>\\n      </div>\\n    \\n      <div class='card-footer'>\\n        <button class='btn btn-outline-secondary'\\n                (click)='onBack()'\\n                style='width:80px'>\\n          <i class='fa fa-chevron-left'></i> Back\\n        </button>\\n      </div>\\n    </div>\\n\"","\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IProduct } from './product';\nimport { ProductService } from './product.service';\n\n@Component({\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  pageTitle = 'Product Detail';\n  errorMessage = '';\n  product: IProduct | undefined;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService) {\n  }\n\n  ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getProduct(id);\n    }\n  }\n\n  getProduct(id: number) {\n    this.productService.getProduct(id).subscribe(\n      product => this.product = product,\n      error => this.errorMessage = <any>error);\n  }\n\n  onBack(): void {\n    this.router.navigate(['/products']);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    let id = +next.url[1].path;\n    if (isNaN(id) || id < 1) {\n      alert(\"Invalid Product Id\");\n      this.router.navigate(['/products']);\n      return false;\n    };\n      return true;\n  }\n}\n","module.exports = \"thead {\\r\\n    color: #337AB7\\r\\n}\"","module.exports = \"<div class='card'>\\r\\n        <div class='card-header'>\\r\\n          {{pageTitle}}\\r\\n        </div>\\r\\n        <div class='card-body'>\\r\\n          <div class='row'>\\r\\n            <div class='col-md-2'>Filter by:</div>\\r\\n            <div class='col-md-4'>\\r\\n              <input type='text'\\r\\n                     [(ngModel)]='listFilter' />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class='row'\\r\\n               *ngIf='listFilter'>\\r\\n            <div class='col-md-6'>\\r\\n              <h4>Filtered by: {{listFilter}}</h4>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class='table-responsive'>\\r\\n            <table class='table'\\r\\n                   *ngIf='products && products.length'>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>\\r\\n                    <button class='btn btn-primary'\\r\\n                            (click)='toggleImage()'>\\r\\n                      {{showImage ? 'Hide' : 'Show'}} Image\\r\\n                    </button>\\r\\n                  </th>\\r\\n                  <th>Product</th>\\r\\n                  <th>Code</th>\\r\\n                  <th>Available</th>\\r\\n                  <th>Price</th>\\r\\n                  <th>5 Star Rating</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor='let product of filteredProducts'>\\r\\n                  <td>\\r\\n                    <img *ngIf='showImage'\\r\\n                         [src]='product.imageUrl'\\r\\n                         [title]='product.productName'\\r\\n                         [style.width.px]='imageWidth'\\r\\n                         [style.margin.px]='imageMargin'>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <a [routerLink]=\\\"['/products', product.productId]\\\">\\r\\n                      {{ product.productName }}\\r\\n                    </a>\\r\\n                  </td>\\r\\n                  <td>{{ product.productCode | lowercase | convertToSpaces: '-' }}</td>\\r\\n                  <td>{{ product.releaseDate }}</td>\\r\\n                  <td>{{ product.price | currency:'USD':'symbol':'1.2-2' }}</td>\\r\\n                  <td>\\r\\n                    <pm-star [rating]='product.starRating'\\r\\n                             (ratingClicked)='onRatingClicked($event)'>\\r\\n                    </pm-star>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf='errorMessage'\\r\\n           class='alert alert-danger'>\\r\\n        Error: {{ errorMessage }}\\r\\n      </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IProduct } from './product';\r\nimport { ProductService } from './product.service';\r\n\r\n@Component({\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n    pageTitle: string = 'Product List';\r\n    imageWidth: number = 50;\r\n    imageMargin: number = 2;\r\n    showImage: boolean = false;\r\n    errorMessage: string;\r\n    \r\n    _listFilter: string;\r\n    get listFilter(): string {\r\n        return this._listFilter;\r\n    }\r\n    set listFilter(value:string) {\r\n        this._listFilter = value;\r\n        this.filteredProducts= this.listFilter ? this.performFilter(this.listFilter) : this.products;\r\n    }\r\n\r\n    filteredProducts: IProduct[];\r\n    products: IProduct[] = [];\r\n\r\n    constructor(private productService: ProductService) {\r\n     \r\n    }\r\n\r\n    onRatingClicked(message: string): void {\r\n        this.pageTitle = 'Product List: ' + message;\r\n    }\r\n\r\n    performFilter(filterBy: string): IProduct[] {\r\n        filterBy = filterBy.toLocaleLowerCase();\r\n        return this.products.filter((product: IProduct) =>\r\n            product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n    }\r\n\r\n    toggleImage(): void {\r\n        this.showImage = !this.showImage;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.productService.getProducts().subscribe(\r\n            products => {\r\n                this.products = products;\r\n                this.filteredProducts = this.products;  \r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n     \r\n     }\r\n}","import { NgModule } from '@angular/core';\nimport { ProductListComponent } from './product-list.component';\nimport { ProductDetailComponent } from './product-detail.component';\nimport { ConvertToSpacesPipe } from '../shared/convert-to-spaces.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ProductDetailGuard } from './product-detail.guard';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      { path: 'products', component: ProductListComponent },\n      {\n        path: 'products/:id',\n        canActivate: [ProductDetailGuard],\n        component: ProductDetailComponent\n      },\n    ]),\n    SharedModule\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    ConvertToSpacesPipe,\n  ]\n})\nexport class ProductModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { IProduct } from \"./product\";\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProductService {\r\n    private productUrl = 'api/products/products.json';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getProducts(): Observable<IProduct[]> {\r\n        return this.http.get<IProduct[]>(this.productUrl).pipe(\r\n          tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    getProduct(id: number): Observable<IProduct | undefined> {\r\n        return this.getProducts().pipe(\r\n          map((products: IProduct[]) => products.find(p => p.productId === id))\r\n        );\r\n      }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        //in the real world, may send the server to some remote logging infrastructure\r\n        //instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            //a client-side or network error occurred.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            //the backend returned an unsuccessful response code\r\n            //the response body may contain clue as to what went wrong\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'convertToSpaces'\r\n})\r\nexport class ConvertToSpacesPipe implements PipeTransform {\r\n\r\n    transform(value: string, character: string): string {\r\n        return value.replace(character, ' ');\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StarComponent } from './star.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    StarComponent\n  ],\n  exports: [\n    StarComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\n  overflow: hidden;\\n}\\ndiv {\\n  cursor: pointer;\\n}\"","module.exports = \"<div class=\\\"crop\\\"\\n     [style.width.px]=\\\"starWidth\\\"\\n     [title]=\\\"rating\\\"\\n     (click)=\\\"onClick()\\\">\\n  <div style=\\\"width: 75px\\\">\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n    <span class=\\\"fa fa-star\\\"></span>\\n  </div>\\n</div>\"","import { Component, OnChanges, Input, EventEmitter, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'pm-star',\r\n    templateUrl: './star.component.html',\r\n    styleUrls: ['./star.component.css']\r\n})\r\nexport class StarComponent implements OnChanges {\r\n   @Input() rating: number;\r\n    starWidth: number;\r\n    @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    ngOnChanges(): void {\r\n        this.starWidth = this.rating * 75 / 5;\r\n    }\r\n\r\n    onClick(): void {\r\n        this.ratingClicked.emit(`The rating ${this.rating} was clicked!`);\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}